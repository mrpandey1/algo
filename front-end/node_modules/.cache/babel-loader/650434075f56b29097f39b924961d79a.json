{"ast":null,"code":"var _jsxFileName = \"/home/nishant/algo/src/components/Table.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport { blue, green, pink, yellow } from '@material-ui/core/colors';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StyledTableCell = withStyles(theme => ({\n  head: {\n    // backgroundColor: theme.palette.common.black,\n    color: theme.palette.common.white\n  },\n  body: {\n    fontSize: 14\n  }\n}))(TableCell);\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 380\n  }\n});\n\nfunction createData(name, result) {\n  return {\n    name,\n    result\n  };\n}\n\nlet rows = [{\n  name: 'URL'\n}, {\n  name: 'Title'\n}, {\n  name: 'Content'\n}];\nexport default function BasicTable({\n  ans\n}) {\n  _s();\n\n  const classes = useStyles();\n\n  if (ans) {\n    if (ans.domain.category) {\n      rows.splice(0, 1, createData('URL', ans.domain.category));\n    }\n\n    if (ans.title.decision) {\n      rows.splice(1, 1, createData('Title', ans.title.decision));\n    }\n\n    if (ans.content.decision) {\n      rows.splice(2, 1, createData('Content', ans.content.decision));\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(TableContainer, {\n    component: Paper,\n    style: {\n      marginTop: 15\n    },\n    children: /*#__PURE__*/_jsxDEV(Table, {\n      className: classes.table,\n      \"aria-label\": \"simple table\",\n      children: [/*#__PURE__*/_jsxDEV(TableHead, {\n        style: {\n          backgroundColor: '#3F51B5'\n        },\n        children: /*#__PURE__*/_jsxDEV(TableRow, {\n          children: [/*#__PURE__*/_jsxDEV(StyledTableCell, {\n            children: \"Index\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n            align: \"right\",\n            children: \"Result\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n        children: rows.map(row => /*#__PURE__*/_jsxDEV(TableRow, {\n          children: [/*#__PURE__*/_jsxDEV(StyledTableCell, {\n            component: \"th\",\n            scope: \"row\",\n            children: row.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n            align: \"right\",\n            children: row.result\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 29\n          }, this)]\n        }, row.result, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 9\n  }, this);\n}\n\n_s(BasicTable, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n  return [useStyles];\n});\n\n_c = BasicTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"BasicTable\");","map":{"version":3,"sources":["/home/nishant/algo/src/components/Table.js"],"names":["React","useState","withStyles","makeStyles","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","blue","green","pink","yellow","StyledTableCell","theme","head","color","palette","common","white","body","fontSize","useStyles","table","minWidth","createData","name","result","rows","BasicTable","ans","classes","domain","category","splice","title","decision","content","marginTop","backgroundColor","map","row"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport { blue, green, pink, yellow } from '@material-ui/core/colors';\n\n\nconst StyledTableCell = withStyles((theme) => ({\n    head: {\n        // backgroundColor: theme.palette.common.black,\n        color: theme.palette.common.white,\n    },\n    body: {\n        fontSize: 14,\n    },\n}))(TableCell);\n\nconst useStyles = makeStyles({\n    table: {\n        minWidth: 380,\n    },\n});\n\nfunction createData(name, result) {\n    return { name, result };\n}\n\nlet rows = [{ name: 'URL', }, { name: 'Title' }, { name: 'Content' }]\n\nexport default function BasicTable({ ans }) {\n    const classes = useStyles();\n\n    if (ans) {\n        if (ans.domain.category) {\n            rows.splice(0, 1, createData('URL', ans.domain.category))\n        }\n\n        if (ans.title.decision) {\n            rows.splice(1, 1, createData('Title', ans.title.decision))\n        }\n\n        if (ans.content.decision) {\n            rows.splice(2, 1, createData('Content', ans.content.decision))\n        }\n    }\n\n    return (\n        <TableContainer component={Paper} style={{ marginTop: 15 }}>\n            <Table className={classes.table} aria-label=\"simple table\" >\n                <TableHead style={{ backgroundColor: '#3F51B5' }}>\n                    <TableRow>\n                        <StyledTableCell>Index</StyledTableCell>\n                        <StyledTableCell align=\"right\">Result</StyledTableCell>\n                    </TableRow>\n                </TableHead>\n                <TableBody>\n                    {rows.map((row) => (\n                        <TableRow key={row.result}>\n                            <StyledTableCell component=\"th\" scope=\"row\">\n                                {row.name}\n                            </StyledTableCell>\n                            <StyledTableCell align=\"right\">{row.result}</StyledTableCell>\n                        </TableRow>\n                    ))}\n                </TableBody>\n            </Table>\n        </TableContainer>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}