{"ast":null,"code":"var _jsxFileName = \"/home/nishant/algo/front-end/src/pages/main.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Button, Container, makeStyles, TextField, Typography } from '@material-ui/core';\nimport KeyboardArrowRightIcon from '@material-ui/icons/KeyboardArrowRight';\nimport ReactJson from 'react-json-view';\nimport Table from '../components/Table';\nimport TableChartOutlinedIcon from '@material-ui/icons/TableChartOutlined';\nimport AccountTreeOutlinedIcon from '@material-ui/icons/AccountTreeOutlined';\nimport ToggleButton from '@material-ui/lab/ToggleButton';\nimport ToggleButtonGroup from '@material-ui/lab/ToggleButtonGroup';\nimport axios from 'axios';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles({\n  field: {\n    marginTop: 20,\n    marginBottom: 20,\n    display: 'block'\n  }\n});\n\nconst Main = () => {\n  _s();\n\n  const [toggle, setToggle] = React.useState('table');\n\n  const handleAlignment = () => {\n    if (toggle === 'table') {\n      setToggle('json');\n    } else {\n      setToggle('table');\n    }\n  };\n\n  const [url, setUrl] = useState('');\n  const [title, setTitle] = useState('');\n  const [content, setContent] = useState('');\n  const [ans, setAns] = useState(undefined);\n\n  const handleSubmit = e => {\n    e.preventDefault(); // console.log('hey')\n\n    var data = JSON.stringify({\n      \"url\": url,\n      \"title\": title,\n      \"content\": content\n    });\n    var config = {\n      method: 'post',\n      url: '/fakebox/check',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      data: data\n    };\n    axios(config).then(function (response) {\n      console.log(response.data);\n      setAns(response.data);\n    }).catch(function (error) {\n      console.log(error);\n    });\n  };\n\n  const classes = useStyles();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      maxWidth: \"sm\",\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        noValidate: true,\n        autoComplete: \"off\",\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          onChange: e => setUrl(e.target.value),\n          className: classes.field,\n          label: \"URL\",\n          variant: \"outlined\",\n          color: \"primary\",\n          fullWidth: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          onChange: e => setTitle(e.target.value),\n          className: classes.field,\n          label: \"Title\",\n          variant: \"outlined\",\n          color: \"primary\",\n          fullWidth: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          onChange: e => setContent(e.target.value),\n          className: classes.field,\n          label: \"Content\",\n          variant: \"outlined\",\n          color: \"primary\",\n          multiline: true,\n          rows: 4,\n          fullWidth: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          color: \"primary\",\n          variant: \"contained\",\n          endIcon: /*#__PURE__*/_jsxDEV(KeyboardArrowRightIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 34\n          }, this),\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ToggleButtonGroup, {\n        exclusive: true,\n        onChange: handleAlignment,\n        \"aria-label\": \"text alignment\",\n        style: {\n          display: 'flex',\n          justifyContent: 'center'\n        },\n        children: [/*#__PURE__*/_jsxDEV(ToggleButton, {\n          value: \"left\",\n          \"aria-label\": \"left aligned\",\n          disabled: true ? toggle === 'table' : false,\n          children: /*#__PURE__*/_jsxDEV(TableChartOutlinedIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ToggleButton, {\n          value: \"center\",\n          \"aria-label\": \"centered\",\n          disabled: true ? toggle === 'json' : false,\n          children: /*#__PURE__*/_jsxDEV(AccountTreeOutlinedIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: toggle === 'json' ? ans && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(ReactJson, {\n            src: ans,\n            theme: \"solarized\",\n            style: {\n              padding: 20,\n              fontSize: 14\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 32\n        }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [\"  \", /*#__PURE__*/_jsxDEV(Typography, {\n            align: \"center\",\n            variant: \"h6\",\n            color: \"secondary\",\n            style: {\n              paddingTop: 18\n            },\n            children: \"Analysis\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 31\n          }, this), /*#__PURE__*/_jsxDEV(Table, {\n            ans: ans\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Main, \"ygdpspq74cZ93ajfh0cynOz89m0=\", false, function () {\n  return [useStyles];\n});\n\n_c = Main;\nexport default Main;\n\nvar _c;\n\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"sources":["/home/nishant/algo/front-end/src/pages/main.js"],"names":["React","Button","Container","makeStyles","TextField","Typography","KeyboardArrowRightIcon","ReactJson","Table","TableChartOutlinedIcon","AccountTreeOutlinedIcon","ToggleButton","ToggleButtonGroup","axios","useState","useStyles","field","marginTop","marginBottom","display","Main","toggle","setToggle","handleAlignment","url","setUrl","title","setTitle","content","setContent","ans","setAns","undefined","handleSubmit","e","preventDefault","data","JSON","stringify","config","method","headers","then","response","console","log","catch","error","classes","target","value","justifyContent","padding","fontSize","paddingTop"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Button, Container, makeStyles, TextField, Typography } from '@material-ui/core';\nimport KeyboardArrowRightIcon from '@material-ui/icons/KeyboardArrowRight';\nimport ReactJson from 'react-json-view'\nimport Table from '../components/Table';\n\nimport TableChartOutlinedIcon from '@material-ui/icons/TableChartOutlined';\nimport AccountTreeOutlinedIcon from '@material-ui/icons/AccountTreeOutlined';\nimport ToggleButton from '@material-ui/lab/ToggleButton';\nimport ToggleButtonGroup from '@material-ui/lab/ToggleButtonGroup';\n\nimport axios from 'axios'\nimport { useState } from 'react'\n\n\nconst useStyles = makeStyles({\n    field: {\n        marginTop: 20,\n        marginBottom: 20,\n        display: 'block'\n    }\n});\n\nconst Main = () => {\n    const [toggle, setToggle] = React.useState('table');\n\n    const handleAlignment = () => {\n        if (toggle === 'table') {\n            setToggle('json')\n        } else {\n            setToggle('table');\n        }\n\n    };\n\n\n    const [url, setUrl] = useState('')\n    const [title, setTitle] = useState('')\n    const [content, setContent] = useState('')\n    const [ans, setAns] = useState(undefined)\n\n    const handleSubmit = (e) => {\n        e.preventDefault()\n        // console.log('hey')\n        var data = JSON.stringify({ \"url\": url, \"title\": title, \"content\": content });\n\n\n        var config = {\n            method: 'post',\n            url: '/fakebox/check',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            data: data\n        };\n\n        axios(config)\n            .then(function (response) {\n                console.log(response.data);\n                setAns(response.data);\n            })\n            .catch(function (error) {\n                console.log(error);\n            });\n    }\n\n    const classes = useStyles();\n\n\n    return (\n        <div>\n            <Container maxWidth=\"sm\">\n                <form\n                    noValidate\n                    autoComplete=\"off\"\n                    onSubmit={handleSubmit}\n                >\n                    <TextField\n                        onChange={(e) => setUrl(e.target.value)}\n                        className={classes.field}\n                        label=\"URL\"\n                        variant=\"outlined\"\n                        color=\"primary\"\n                        fullWidth\n                    />\n                    <TextField\n                        onChange={(e) => setTitle(e.target.value)}\n                        className={classes.field}\n                        label=\"Title\"\n                        variant=\"outlined\"\n                        color=\"primary\"\n                        fullWidth\n                    />\n                    <TextField\n                        onChange={(e) => setContent(e.target.value)}\n                        className={classes.field}\n                        label=\"Content\"\n                        variant=\"outlined\"\n                        color=\"primary\"\n                        multiline\n                        rows={4}\n                        fullWidth\n                    />\n\n                    <Button\n                        type=\"submit\"\n                        color=\"primary\"\n                        variant=\"contained\"\n                        endIcon={<KeyboardArrowRightIcon />}\n                    >\n                        Submit\n        </Button>\n                </form>\n\n                <ToggleButtonGroup\n                    exclusive\n                    onChange={handleAlignment}\n                    aria-label=\"text alignment\"\n                    style={{ display: 'flex', justifyContent: 'center' }}\n                >\n                    <ToggleButton value=\"left\" aria-label=\"left aligned\" disabled={true ? toggle === 'table' : false}>\n                        <TableChartOutlinedIcon />\n                    </ToggleButton>\n                    <ToggleButton value=\"center\" aria-label=\"centered\" disabled={true ? toggle === 'json' : false}>\n                        <AccountTreeOutlinedIcon />\n                    </ToggleButton>\n                </ToggleButtonGroup>\n\n                <div>\n                    {toggle === 'json' ?\n                        ans && <div>\n                            <br></br>\n                            <ReactJson src={ans} theme=\"solarized\" style={{ padding: 20, fontSize: 14 }} />\n                        </div>\n                        : <>  <Typography align=\"center\" variant=\"h6\" color=\"secondary\" style={{ paddingTop: 18 }} >Analysis</Typography>\n                            <Table ans={ans} /></>}\n                </div>\n\n            </Container>\n        </div>\n    )\n}\n\nexport default Main\n"]},"metadata":{},"sourceType":"module"}